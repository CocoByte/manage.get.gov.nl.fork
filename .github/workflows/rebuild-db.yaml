# This workflow can be run from the CLI
#     gh workflow run rebuild-db.yaml -f environment=ENVIRONMENT

name: Rebuild database
run-name: Rebuild database for ${{ github.event.inputs.environment }}

on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: Which environment should we flush and re-load data for?
        options:
          - nl

jobs:
  reset-db:
    runs-on: ubuntu-latest
    env:
      CF_USERNAME: CF_${{ github.event.inputs.environment }}_USERNAME
      CF_PASSWORD: CF_${{ github.event.inputs.environment }}_PASSWORD
    steps:
      - name: Drop Tables for ${{ github.event.inputs.environment }}
        uses: cloud-gov/cg-cli-tools@main
        with:
          cf_username: ${{ secrets[env.CF_USERNAME] }}
          cf_password: ${{ secrets[env.CF_PASSWORD] }}
          cf_org: cisa-dotgov
          cf_space: ${{ github.event.inputs.environment }}
          cf_command: "run-task getgov-${{ github.event.inputs.environment }} --command 'python manage.py drop_tables --no-input' --name flush"
      
      # - name: Run Django migrations for ${{ github.event.inputs.environment }}
      #   uses: cloud-gov/cg-cli-tools@main
      #   with:
      #     cf_username: ${{ secrets[env.CF_USERNAME] }}
      #     cf_password: ${{ secrets[env.CF_PASSWORD] }}
      #     cf_org: cisa-dotgov
      #     cf_space: ${{ github.event.inputs.environment }}
      #     cf_command: "run-task getgov-${{ github.event.inputs.environment }} --command 'python manage.py migrate' --name migrate"

      # - name: Run fixtures for ${{ github.event.inputs.environment }}
      #   uses: cloud-gov/cg-cli-tools@main
      #   with:
      #     cf_username: ${{ secrets[env.CF_USERNAME] }}
      #     cf_password: ${{ secrets[env.CF_PASSWORD] }}
      #     cf_org: cisa-dotgov
      #     cf_space: ${{ github.event.inputs.environment }}
      #     cf_command: "run-task getgov-${{ github.event.inputs.environment }} --command 'python manage.py load' --name load"

      # - name: Create cache table for ${{ github.event.inputs.environment }}
      #   uses: cloud-gov/cg-cli-tools@main
      #   with:
      #     cf_username: ${{ secrets[env.CF_USERNAME] }}
      #     cf_password: ${{ secrets[env.CF_PASSWORD] }}
      #     cf_org: cisa-dotgov
      #     cf_space: ${{ github.event.inputs.environment }}
      #     cf_command: "run-task getgov-${{ github.event.inputs.environment }} --command 'python manage.py createcachetable' --name createcachetable"
